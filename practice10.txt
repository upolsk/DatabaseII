Exercise 1. (this is not from the Textbook)
We have the following 3 transactions. Give the possible values of data element X after
the execution of the transactions, if the schedule is serial and the initial value of X = 100.
T1: READ(X,t); t:=t+100; WRITE(X,t);
T2: READ(X,t); t:=t*2; WRITE(X,t);
T3: READ(X,t); t:=t+10; WRITE(X,t);

(T1, T2, T3) -> 200 -> 400 -> 410
(T1, T3, T2) -> 200 -> 210 -> 420
(T2, T1, T3) -> 200 -> 300 -> 310
(T2, T3, T1) -> 200 -> 210 -> 310
(T3, T1, T2) -> 110 -> 210 -> 420
(T3, T2, T1) -> 110 -> 220 -> 320

Exercise 18.1.2: 
If two transactions consist of 4 and 6 actions, respectively,
how many interleavings of these transactions are there?
(N+M)! / (N!*M!) = (4+6)! /(4!*6!) = 10! / (4! * 6!)


Exercise 18.2.1: 
Below are two transactions, described in terms of their effect on two database elements A and B, 
which we may assume are integers.
T1: READ(A,t); t:= t+2; WRITE(A,t); READ(B,t); t:= t*3; WRITE(B,t);  -> R1(A), W1(A), R1(B), W1(B) 
T2: READ(B,s); s:= s*2; WRITE(B,s); READ(A,s); s:= s+3; WRITE(A,s);  -> R2(A), W2(A), R2(B), W2(B)

We assume that, whatever consistency constraints there are on the database,
these transactions preserve them in isolation. Note that A = B is not the
consistency constraint.

a) It turns out that both serial orders have the same effect on the database;
   that is, (T1 ,T2) and (T2,T1) are equivalent. Demonstrate this fact by showing the effect 
   of the two transactions on an arbitrary initial database state.
   A = 2, B = 4
   (T1, T2) = (2, 4) -> (4, 12) -> (7, 24)
   (T2, T1) = (2, 4) -> (5, 8) -> (7, 24)
                 

b) Give examples of a serializable schedule and a nonserializable schedule of
   the 12 actions above.
   Serializable:
                R1(A), W1(A), R1(B), W1(B), R2(A), W2(A), R2(B), W2(B)
   Nonserializable:
                R1(A), W1(A), R2(B), W2(B), R1(B), W1(B), R2(A), W2(A)

c) How many serial schedules of the 12 actions are there? 
   Answer: 2
   (T1, T2): R1(A), W1(A), R1(B), W1(B), R2(A), W2(A), R2(B), W2(B)
   (T2, T1): R2(A), W2(A), R2(B), W2(B), R1(A), W1(A), R1(B), W1(B) 

Conflicting actions: R1(A)-W2(A); W2(A)-R1(A); W1(A)-W2(A); R2(A)-W1(A); W1(A)-R2(A); W2(A)-W1(A)

Exercise 18.2.2: 
The two transactions of Exercise 18.2.1 can be written in our notation that shows 
read- and write-actions only, as:
T1: R1(A); W1(A); R1(B); W1(B);
T2: R2(B); W2(B); R2(A); W2(A);

a) Among the possible schedules of the eight actions above, how many are
   conflict-equivalent to the serial order (T1, T2)?  Answer: 1

(T1, T2): R1(A); W1(A); R1(B); W1(B); R2(B); W2(B); R2(A); W2(A);
                               ------------Conflicting

b) How many schedules of the eight actions are conflict-equivalent to the serial order (T2, T1)?
Answer: 1
(T2, T1): R2(B); W2(B); R2(A); W2(A); R1(A); W1(A); R1(B); W1(B);
                               -------------Conflicting

Exercise 18.2.3: 
Suppose the transactions of Exercise 18.2.2 are changed to be:
T1: r1(A); w1(A); r1(B); w1(B);
T2: r2(A); w2(A); r2(B); w2(B);
That is, the transactions retain their semantics from Exercise 18.2.1, but T2 has been changed 
so A is processed before B. 
Give:
a) The number of conflict-serializable schedules.
Answer: (2+2)!/(2!*2!) = 6
(T1, T2) = r1(A); w1(A); r1(B); w1(B); r2(A); w2(A); r2(B); w2(B)
           r1(A); w1(A); r1(B); r2(A); w1(B); w2(A); r2(B); w2(B)
           r1(A); w1(A); r2(A); r1(B); w1(B); w2(A); r2(B); w2(B)
           r1(A); w1(A); r2(A); w1(B); r1(B); w2(A); r2(B); w2(B) 
           r1(A); w1(A); r2(A); w1(B); w2(A); r1(B); r2(B); w2(B)
           r1(A); w1(A); r1(B); r2(A); w2(A); w1(B); r2(B); w2(B)
(T2, T1) = r2(A); w2(A); r2(B); w2(B); r1(A); w1(A); r1(B); w1(B);


Exercise 2. (this is not from the Textbook)
Give the number of conflict-serializable schedules for the following pairs of transactions:
(Give some justification in several words too.)
a) T1: R1(A); W1(A); R1(B); W1(B);      T2: R2(C); W2(C); W2(D);    
       Answer: (3+4)! / (3!*4!) = 35  (4 action from T1 and 3 action from T2)     

b) T1: W1(A); R1(B); W1(B);             T2: R2(B); W2(B); R2(A);
   (T1, T2): W1(A); R1(B); W1(B); R2(B); W2(B); R2(A);
                           ------------Conflicting
   (T2, T1): R2(B); W2(B); R2(A); W1(A); R1(B); W1(B);
                           ------------Conflicting
   Answer: 2

c) T1: R1(A); W1(A); R1(B);             T2: R2(B); W2(B); W2(A);
   (T1, T2): R1(A); W1(A); R1(B); R2(B); W2(B); W2(A);
             R1(A); W1(A); R2(B); R1(B); W2(B); W2(A);
             R1(A); R2(B); W1(A); R1(B); W2(B); W2(A);
             R2(B); R1(A); W1(A); R1(B); W2(B); W2(A);

   (T2, T1): R2(B); W2(B); W2(A); R1(A); W1(A); R1(B);
                           -----------Conflicting

   Answer: 4 + 1 = 5

PRECEDENCE GRAPH
R1(A) -> W2(A); W1(A) -> R2(A); W1(A) -> W2(A); R2(A)->W1(A)
           